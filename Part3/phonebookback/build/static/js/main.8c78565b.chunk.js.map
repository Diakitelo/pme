{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/NotificationSuccess.js","components/NotificationError.js","components/services/phoneBook.js","App.js","index.js"],"names":["Filter","searchTerm","handleChange","type","value","onChange","PersonForm","addName","newName","handleNameChange","newNumber","handleNumChange","handleUpdate","onSubmit","Person","results","handleDelete","map","resultat","name","number","onClick","id","Persons","persons","NotificationSuccess","message","className","setErrorMessage","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","setNewName","setNewNumber","setSearchTerm","successMessage","setSuccessMessage","errorMessage","useEffect","phoneBookService","initialPhoneBook","filter","person","toLowerCase","includes","NotificationError","event","target","preventDefault","nameObject","contact","window","confirm","setTimeout","catch","err","concat","find","p","filteredPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c78565b.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Filter({ searchTerm, handleChange }) {\n  return (\n    <p>\n      Filter shown with\n      <input type=\"text\" value={searchTerm} onChange={handleChange} />\n    </p>\n  );\n}\n","import React from \"react\";\n\nexport default function PersonForm({\n  addName,\n  newName,\n  handleNameChange,\n  newNumber,\n  handleNumChange,\n  handleUpdate\n}) {\n  return (\n    <form onSubmit={addName}>\n      <div>\n        name: <input value={newName} onChange={handleNameChange} />\n        <div>\n          number: <input value={newNumber} onChange={handleNumChange} />\n        </div>\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n}\n","export default function Person({results, handleDelete }){\n  return (\n    <>\n    {\n      results.map((resultat) => (  \n      <p key={resultat.id}>\n        {resultat.name }\n        {resultat.number}\n        <button onClick={() => handleDelete(resultat.id)} >Delete</button>\n      </p>\n      ))\n    }\n    </>\n  );\n}\n","import React from \"react\";\nimport Person from \"./Person\";\n\nexport default function Persons({ persons, results, handleDelete }) {\n  return (\n    <>{results ? <Person results={results} handleDelete={handleDelete} /> : <Person results={persons} handleDelete={handleDelete} />}</>\n  );\n}\n","import React from \"react\";\n\nconst NotificationSuccess = ({ message }) => {\n  if (message === \"\") {\n    return \"\";\n  } \n\n  return <div className=\"success\">{message}</div>;\n};\n\nexport default NotificationSuccess;\n","import React from \"react\";\n\nconst setErrorMessage = ({ message }) => {\n  if (message === \"\") {\n    return \"\";\n  }\n\n  return <div className=\"error\">{message}</div>;\n};\n\nexport default setErrorMessage;","import axios from \"axios\";\nconst baseUrl = \"http://localhost:3001/api/persons\";\n\n/* const getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n */\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst deleted = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n}; \n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nexport default { getAll, create, update, deleted };\n","import React, { useState, useEffect } from \"react\";\n\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport NotificationSuccess from \"./components/NotificationSuccess\";\nimport NotificationError from \"./components/NotificationError\";\nimport phoneBookService from \"./components/services/phoneBook\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    phoneBookService.getAll().then((initialPhoneBook) => {\n      setPersons(initialPhoneBook);\n    });\n  }, []);\n\n  const results =\n    searchTerm === \"\"\n      ? persons\n      : persons.filter((person) =>\n          person.name.toLowerCase().includes(searchTerm.toLowerCase())\n        );\n\n  const addName = (event) => {\n    event.preventDefault();\n    const nameObject = {\n      name: newName,\n      number: newNumber,\n    };\n\n    const isExist = persons\n      .map((person) => person.name.toLowerCase())\n      .includes(nameObject.name.toLowerCase());\n\n    if (!isExist) {\n      phoneBookService.create(nameObject).then((response) => {\n        setPersons(persons.concat(response));\n        setSuccessMessage(`Add ${nameObject.name}`);\n        setTimeout(() => {\n          setSuccessMessage(\"\");\n        }, 5000);\n        setNewName(\"\");\n        setNewNumber(\"\");\n      });\n    } else {\n      const contact = persons.filter(\n        (person) => person.name.toLowerCase() === nameObject.name.toLowerCase()\n      )[0];\n\n      const confirmUpdate = window.confirm(\n        `${newName} is already added to phonebook, replace the old number with a new one?`\n      );\n      if (confirmUpdate) {\n        phoneBookService\n          .update(contact.id, { ...nameObject, id: contact.id })\n          .then((response) => {\n            setPersons(\n              persons.map((person) =>\n                person.id === contact.id\n                  ? { ...nameObject, id: response.id }\n                  : person\n              )\n            );\n            setSuccessMessage(`Update ${nameObject.name}`);\n            setTimeout(() => {\n              setSuccessMessage(\"\");\n            }, 5000);\n          })\n          .catch((err) => {\n            setErrorMessage(\n              `Information of ${nameObject.name} has already been remove from server`\n            );\n            setTimeout(() => {\n              setErrorMessage(\"\");\n            }, 5000);\n          });\n      }\n      setNewName(\"\");\n      setNewNumber(\"\");\n    }\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleDelete = (id) => {\n    const person = persons.find((p) => p.id === id);\n\n    const confirmDelete = window.confirm(`Delete ${person.name}?`);\n\n    if (confirmDelete) {\n      phoneBookService.deleted(id).then(() => {\n        const filteredPersons = persons.filter((person) => person.id !== id);\n        setPersons(filteredPersons);\n        setSuccessMessage(\n          `Information of ${person.name} has been removed from the server`\n        );\n        setTimeout(() => {\n          setSuccessMessage(\"\");\n        }, 5000);\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <NotificationSuccess message={successMessage} />\n      <NotificationError message={errorMessage} />\n      <Filter searchTerm={searchTerm} handleChange={handleChange} />\n      <h3>add a new</h3>\n      <PersonForm\n        addName={addName}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumChange={handleNumChange}\n      />\n      <h3>Numbers</h3>\n      <Persons\n        persons={persons}\n        results={results}\n        handleDelete={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}