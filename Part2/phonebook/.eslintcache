[{"/home/diakite/Documents/Projet perso/fullstackOpen/Part2/phonebook/src/App.js":"1","/home/diakite/Documents/Projet perso/fullstackOpen/Part2/phonebook/src/index.js":"2","/home/diakite/Documents/Projet perso/fullstackOpen/Part2/phonebook/src/components/PersonForm.js":"3","/home/diakite/Documents/Projet perso/fullstackOpen/Part2/phonebook/src/components/Filter.js":"4","/home/diakite/Documents/Projet perso/fullstackOpen/Part2/phonebook/src/components/Persons.js":"5","/home/diakite/Documents/Projet perso/fullstackOpen/Part2/phonebook/src/components/Person.js":"6"},{"size":2190,"mtime":1610464595478,"results":"7","hashOfConfig":"8"},{"size":146,"mtime":1610394046504,"results":"9","hashOfConfig":"8"},{"size":467,"mtime":1610449329886,"results":"10","hashOfConfig":"8"},{"size":221,"mtime":1610449336794,"results":"11","hashOfConfig":"8"},{"size":412,"mtime":1610449895404,"results":"12","hashOfConfig":"8"},{"size":136,"mtime":1610449980309,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"1x3pqu",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/diakite/Documents/Projet perso/fullstackOpen/Part2/phonebook/src/App.js",["27","28"],"import React, { useState, useEffect } from \"react\";\nimport axios from 'axios'\n\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    console.log('effect')\n    axios\n      .get('http://localhost:3002/notes')\n      .then(response => {\n        console.log('promise fulfilled')\n        setPersons(response.data)\n      })\n  }, [])\n\n  const isFilter =\n    filter.length === 0\n      ? persons\n      : persons.filter((value) => value.name.includes(filter));\n\n  const results = !searchTerm\n    ? persons\n    : persons.filter((person) =>\n        person.name.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n\n  const addName = (event) => {\n    event.preventDefault();\n    const nameObject = {\n      name: newName,\n      number: newNumber,\n    };\n\n    if (\n      isFilter.filter(\n        (value) => value.name.toLowerCase() === newName.toLowerCase()\n      ) == \"\"\n    ) {\n      setPersons(persons.concat(nameObject));\n      setNewName(\"\");\n      setNewNumber(\"\");\n    } else {\n      alert(`${newName} is already added to phonebook`);\n    }\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n  /*   const handleFilter = (event) => {\n    setFilter(event.target.value);\n  }; */\n  const handleNumChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter searchTerm={searchTerm} handleChange={handleChange} />\n      <h3>add a new</h3>\n      <PersonForm\n        addName={addName}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumChange={handleNumChange}\n      />\n      <h3>Numbers</h3>\n      <Persons persons={persons} results={results} />\n    </div>\n  );\n};\n\nexport default App;\n","/home/diakite/Documents/Projet perso/fullstackOpen/Part2/phonebook/src/index.js",[],"/home/diakite/Documents/Projet perso/fullstackOpen/Part2/phonebook/src/components/PersonForm.js",[],"/home/diakite/Documents/Projet perso/fullstackOpen/Part2/phonebook/src/components/Filter.js",[],"/home/diakite/Documents/Projet perso/fullstackOpen/Part2/phonebook/src/components/Persons.js",[],"/home/diakite/Documents/Projet perso/fullstackOpen/Part2/phonebook/src/components/Person.js",[],{"ruleId":"29","severity":1,"message":"30","line":11,"column":18,"nodeType":"31","messageId":"32","endLine":11,"endColumn":27},{"ruleId":"33","severity":1,"message":"34","line":46,"column":9,"nodeType":"35","messageId":"36","endLine":46,"endColumn":11},"no-unused-vars","'setFilter' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]